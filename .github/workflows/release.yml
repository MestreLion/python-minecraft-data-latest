# https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

name: Release project on 📦 Github and 🐍 PyPI

on: push

jobs:
  build:
    name: Build Python distribution 📦
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Check minecraft_data submodule availability and size
      run: >-
        dir=minecraft_data/data/data/ &&
        size=$(du -bs -- "$dir" | cut -f1) &&
        printf '%s\t%s\n' "$size" "$dir" &&
        [[ "$size" ]] && ((size > 250 * 1000 * 1000))
    - name: Install pypa/build
      run: python3 -m pip install build --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Check build artifacts
      run: >-
        dir=dist/ &&
        ls -l "$dir" &&
        size=$(du -bs -- "$dir" | cut -f1) &&
        printf '%s\t%s\n' "$size" "$dir" &&
        ((size > 30 * 1000 * 1000))
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  # Usage of GITHUB_TOKEN requires 'write' permission in Project Settings
  github-release:
    name: Create GitHub Release 📦
    # only on tag pushes
    if: startsWith(github.ref, 'refs/tags/')
    needs:
    - build
    runs-on: ubuntu-latest
    permissions:
      contents: write  # mandatory for making GitHub Releases
      id-token: write  # mandatory for sigstore
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        '${{ github.ref_name }}'
        --repo '${{ github.repository }}'
        --generate-notes
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'

  publish-to-pypi:
    name: Publish 🐍 to PyPI
    needs:
    - build
    - github-release
    runs-on: ubuntu-latest
    environment:
      name: pypi
      # Update with your PyPI project name
      url: https://pypi.org/p/minecraft-data-latest
    permissions:
      id-token: write  # mandatory for trusted publishing
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  publish-to-testpypi:
    name: Publish 🐍 to TestPyPI
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      # Update with your PyPI project name
      url: https://test.pypi.org/p/minecraft-data-latest
    permissions:
      id-token: write
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
